TO DO LIST BITCHES: 
- add indexes to all events/options✅(except for endings: see comments in questions.js file)
- figure out key state
- figure out positives + negatives
- making display if/else statements look nicer (concise babey)

Less Urgent:
- picture (for intro maybe, and KEY EASTER EGG)(if event.hasOwnProperty image === true {display: image})
- name input (at start)
- maybe different ending design 

WHALEN ADVICE:
- Change innerHTML of individual buttons 
- Make consts of document.id().value for each button
- % signs in html?? (look at album-builder project from whalen)
- ***Look at event delegation on stackoverflow (put click on displayContainer and see what target was clicked and then do stuff)
- "freecodecamp" "Adding an event listener to dynamically created element..."---CHECK IT OUT
**********
HOW TO DEPLOY SITE
- Change main in package.json to dist/index.html instead of index.json
- Type in npm run build
- Make site in netlify (command: npm run build , directory: dist)
**********
[{{My failed attempt at a foreach:}}]
  DOMSelectors.optionButtons.forEach((button) => {
    button.addEventListener('click', function() { 
      if (button.target === DOMSelectors.buttonOne) {
        currentAnswerIndex = selectedEvent.options[0].answerIndex;
        alert(currentAnswerIndex);
      } else if (button.target === DOMSelectors.buttonTwo) {
        currentAnswerIndex = selectedEvent.options[1].answerIndex;
        alert(currentAnswerIndex);
      } else if (button.target === DOMSelectors.buttonThree) {
        currentAnswerIndex = selectedEvent.options[2].answerIndex;
        alert(currentAnswerIndex);
        } else {
          currentAnswerIndex = selectedEvent.options[3].answerIndex;
          alert(currentAnswerIndex);
        }
  });
});


Code Blurbs and Concepts 

if currentAnswerIndex === (index of ending event) && keyState === true 
if currentAnswerIndex === (index of ending event) && keyState === false then remove/don't display/make KB equal blank quotation marks (contingent on that being a valid method) key button 

DOMSelectors.displayContainer.innerHTML = `<div id="quiz">
  <h1 id="text">${selectedEvent.question}</h1>
   <div id="button-options" class="button-box">
      <button class="button button1">${selectedEvent.options[0].a}</button>
      <button class="button button2">${selectedEvent.options[1].b}</button>
      <button class="button button3">${selectedEvent.options[2].c}</button>
      <button class="button button4">${selectedEvent.options[3].d}</button>
  </div> 
  <a class="next">Onwards!</a>`;

  DOMSelectors.buttonOne.addEventListener("click", function () {
    currentAnswerIndex = selectedEvent.options[0].answerIndex;
    alert(currentAnswerIndex);
  });
  DOMSelectors.buttonTwo.addEventListener("click", function () {
    currentAnswerIndex = selectedEvent.options[1].answerIndex;
    alert(currentAnswerIndex);
  });
  DOMSelectors.buttonThree.addEventListener("click", function () {
    currentAnswerIndex = selectedEvent.options[2].answerIndex;
    alert(currentAnswerIndex);
  });
  DOMSelectors.buttonFour.addEventListener("click", function () {
    currentAnswerIndex = selectedEvent.options[3].answerIndex;
    alert(currentAnswerIndex);
  });

Stealing (like the cool kids we are)

function showOption(option) {
  return option.requiredState == null || option.requiredState(state)
}
state = Object.assign(state, option.setState)

Failed Nonsense Goes In the Bad Bin
//first, display starting event with eventIndex = 0 using innerHTML ✅
//on click of option button, register currentAnswerIndex according to answerIndex of selected option (Do this next!!)
//on click of next button, find event whose eventIndex matches the newly updated currentAnswerIndex ✅
//use inner HTML to display that event, which closes the function and returns back to step 1!!! woohoo ✅

//TEST: on click of onward button, change h1 to text of eventIndex = 0

/* 
if (selectedEvent.options[1].b === '' && selectedEvent.options[2].c === '' && selectedEvent.options[3].d === '') {
buttonOne.style.visibility = 'visible';
buttonTwo.style.visibility = 'hidden';
buttonThree.style.visibility = 'hidden';
buttonFour.style.visibility = 'hidden';
}
  else if (selectedEvent.options[2].c === '' && selectedEvent.options[3].d === '') {
    buttonOne.style.visibility = 'visible';
    buttonTwo.style.visibility = 'visible';
    buttonThree.style.visibility = 'hidden';
    buttonFour.style.visibility = 'hidden';
  } 
  else if (selectedEvent.options[3].d === '') {
    buttonOne.style.visibility = 'visible';
    buttonTwo.style.visibility = 'visible';
    buttonThree.style.visibility = 'visible';
    buttonFour.style.visibility = 'hidden';
  } 
  else {
    buttonOne.style.visibility = 'visible';
buttonTwo.style.visibility = 'visible';
buttonThree.style.visibility = 'visible';
buttonFour.style.visibility = 'visible';
  }


// const buttonOne = document.querySelector("#button1");
// const buttonTwo = document.querySelector("#button2");
// const buttonThree = document.querySelector("#button3");
// const buttonFour = document.querySelector("#button4");

